networks:
  proxy:
    external: true

services:
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/jellyfin:/config"
      - "{{ storage.media.dir }}:/data/media"
    ports:
      - "8096:8096"
    networks: [proxy]
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: show_downloader
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/sonarr:/config"
      - "{{ storage.downloads_dir }}:/downloads"
      - "{{ storage.media.dir }}/tv:/tv"
    ports:
      - "8989:8989"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.{{ network.domain_name }}`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  radarr:
    image: linuxserver/radarr:latest
    container_name: movie_downloader
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/radarr:/config"
      - "{{ storage.downloads_dir }}:/downloads"
      - "{{ storage.media.dir }}/movies:/movies"
    ports:
      - "7878:7878"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.{{ network.domain_name }}`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: indexer_manager
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/prowlarr:/config"
    ports:
      - "9696:9696"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ network.domain_name }}`)"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
  - WEBUI_PORT=8080
    volumes:
      - "{{ storage.appdata_dir }}/qbittorrent:/config"
      - "{{ storage.downloads_dir }}:/downloads"
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.{{ network.domain_name }}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=web"
  - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: subtitle_manager
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/bazarr:/config"
      - "{{ storage.media.dir }}/movies:/movies"
      - "{{ storage.media.dir }}/tv:/tv"
    ports:
      - "6767:6767"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.{{ network.domain_name }}`)"
      - "traefik.http.routers.bazarr.entrypoints=web"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: music_downloader
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/lidarr:/config"
      - "{{ storage.downloads_dir }}:/downloads"
      - "{{ storage.media.dir }}/music:/music"
    ports:
      - "8686:8686"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.{{ network.domain_name }}`)"
      - "traefik.http.routers.lidarr.entrypoints=web"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: tv_and_movie_request_manager
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
      - LOG_LEVEL=info
    volumes:
      - "{{ storage.appdata_dir }}/jellyseerr:/app/config"
    ports:
      - "5055:5055"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.{{ network.domain_name }}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=web"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
    volumes:
      - "{{ storage.appdata_dir }}/audiobookshelf/config:/config"
      - "{{ storage.appdata_dir }}/audiobookshelf/metadata:/metadata"
      - "{{ storage.media.dir }}/audiobooks:/audiobooks"
      - "{{ storage.media.dir }}/podcasts:/podcasts"
    ports:
      - "13378:80"
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookshelf.rule=Host(`audiobookshelf.{{ network.domain_name }}`)"
      - "traefik.http.routers.audiobookshelf.entrypoints=web"
      - "traefik.http.services.audiobookshelf.loadbalancer.server.port=80"

  audiobookrequest:
    image: markbeep/audiobookrequest:latest
    ports:
      - "5432:5432"
    volumes:
      - ./config:/config
    environment:
      ABR_APP__PORT: 5432
      ABR_APP__OPENAPI_ENABLED: true
    networks: [proxy]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookrequest.rule=Host(`audiobookrequest.{{ network.domain_name }}`)"
      - "traefik.http.routers.audiobookrequest.entrypoints=web"
      - "traefik.http.services.audiobookrequest.loadbalancer.server.port=80"


# Fixed Jellystat configuration
  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    environment:
      - PUID={{ user.uid }}
      - PGID={{ user.gid }}
      - TZ={{ network.timezone }}
      # Required environment variables for Jellystat
      - POSTGRES_USER=jellystat

  - POSTGRES_PASSWORD=changeme

      - POSTGRES_IP=jellystat-db
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=jfstat

  - JWT_SECRET=changeme_jwt

    volumes:
      - "{{ storage.appdata_dir }}/jellystat:/app/backend/backup-data"
    ports:
      - "8086:3000"
    networks: [proxy]
    restart: unless-stopped
    depends_on:
      - jellystat-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellystat.rule=Host(`jellystat.{{ network.domain_name }}`)"
      - "traefik.http.routers.jellystat.entrypoints=web"
      - "traefik.http.services.jellystat.loadbalancer.server.port=3000"

  # PostgreSQL database for Jellystat
  jellystat-db:
    image: postgres:15-alpine
    container_name: jellystat-db
    environment:
      - POSTGRES_DB=jfstat
      - POSTGRES_USER=jellystat

  - POSTGRES_PASSWORD=changeme

    volumes:
      - "{{ storage.appdata_dir }}/jellystat-db:/var/lib/postgresql/data"
    networks: [proxy]
    restart: unless-stopped