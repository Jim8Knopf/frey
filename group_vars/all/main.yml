---
# ================================
# FEATURE TOGGLES
# ================================
features:
  infrastructure: true
  networking: true
  wifi_access_point: true
  media: true
  monitoring: true
  file_management: false
  ai_stack: false
  photo_management: false
  homeassistant: false
  backup: false
  piper: false
  cookbook: false
  power_monitoring: false
  voice_assistant: false

# (No deploy_* compatibility mappings here â€” use `features.*` toggles)

# ================================
# CONFIGURATION
# ================================
user:
  name: else
  uid: 1000
  gid: 1000


# ================================
# STORAGE PATHS
# ================================
storage:
  base_dir: /opt/frey
  appdata_dir: "{{ storage.base_dir }}/appdata"

# ==============================================================================
# ROLE: INFRASTRUCTURE & NETWORKING
# ==============================================================================
network:
  domain_name: frey
  timezone: Australia/Hobart
  dns_rewrites:
    - name: jellyfin
    - name: sonarr
    - name: radarr
    - name: bazarr
    - name: audiobookshelf
    - name: qbittorrent
    - name: prowlarr
    - name: dockge
    - name: portainer
    - name: grafana
    - name: uptime-kuma
    - name: traefik
    - name: immich
    - name: cookbook
    - name: jellyseerr
    - name: lidarr
    - name: jellystat
  macvlan:
    enable: false
    physical_interface: "wlan0"
    network_name: "macvlan_net"
    subnet: "192.168.1.0/24"
    gateway: "192.168.1.1"
    ip_range: "192.168.1.200/28"

# ==============================================================================
# ROLE: WIFI_ACCESS_POINT
# ==============================================================================
wifi:
  ssid: "FreyHub"
  password: "YourSecurePassword"
  channel: 7
  country: "AU"
  ip: "192.168.4.1"
  dhcp_range_start: "192.168.4.10"
  dhcp_range_end: "192.168.4.50"
  interface: "wlan1"
  client_interface: "wlan0"
  network: "192.168.4.0/24"
  hw_mode: g
  macaddr_acl: 0
  auth_algs: 1
  ignore_broadcast_ssid: 0
  ieee80211n: 1
  wmm_enabled: 1

# ==============================================================================
# TODO SERVICE PORTS 
# ==============================================================================
ports:
  ai_stack:
    ollama: 11434
    openwebui: 3000
  photos_home:
    immich: 2283
    homeassistant: 8123
  infrastructure:
    traefik: 80
    traefik_dashboard: 8081
    portainer: 9000
    dockge: 5001
  monitoring:
    grafana: 3001
    prometheus: 9090
    node_exporter: 9100
    cadvisor: 8082
    loki: 3100
    promtail: 9080
    uptime_kuma: 3002
  file_management:
    filebrowser: 8083
    code_server: 8084
  network_tools:
    speedtest: 8085
    adguardhome: 3053
  cookbook:
    cookbook: 8090
  voice_assistant:
    piper: 10200

# ==============================================================================
# SECURITY SETTINGS
# ==============================================================================
security:
  fail2ban:
    enable: true
  ufw:
    enable: true
  ssh_port: 22
  firewall_tcp_ports: "{{
    [security.ssh_port, ports.infrastructure.dockge] +
    (features.infrastructure | ternary([
      ports.infrastructure.traefik, 
      ports.infrastructure.traefik_dashboard, 
      ports.infrastructure.portainer
    ], [])) +
    (features.media | ternary([
      media.services.jellyfin.port,
      media.services.sonarr.port,
      media.services.radarr.port,
      media.services.bazarr.port,
      media.services.audiobookshelf.port,
      media.services.qbittorrent.port,
      media.services.prowlarr.port,
      media.services.jellyseerr.port,
      media.services.lidarr.port,
      media.services.jellystat.port
    ], [])) +
    (features.ai_stack | ternary([
      ports.ai_stack.ollama, 
      ports.ai_stack.openwebui
    ], [])) +
    (features.photo_management | ternary([
      ports.photos_home.immich
    ], [])) +
    (features.homeassistant | ternary([
      ports.photos_home.homeassistant
    ], [])) +
    (features.monitoring | ternary([
      ports.monitoring.grafana, 
      ports.monitoring.prometheus, 
      ports.monitoring.uptime_kuma, 
      ports.network_tools.speedtest
    ], [])) +
    (features.networking | ternary([
      ports.network_tools.adguardhome
    ], [])) +
    (features.file_management | ternary([
      ports.file_management.filebrowser, 
      ports.file_management.code_server
    ], [])) +
    (features.cookbook | ternary([
      ports.cookbook.cookbook
    ], [])) +
    (features.voice_assistant | ternary([
      ports.voice_assistant.piper
    ], []))
    }}"

# ==============================================================================
# OPTIMIZATION SETTINGS
# ==============================================================================
optimization:
  ssd:
    enable: false
    trim: true
  german_content:
    locale: de_DE.UTF-8
    enable_indexers: true

# ==============================================================================
# POWER MANAGEMENT (12V setup)
# ==============================================================================
power:
  low_threshold: 11.8
  critical_threshold: 11.0
  enable_graceful_shutdown: false

# ================================
# AUTOMATION SETTINGS
# ================================
automation:
  watchtower_interval: 86400
  backup_retention_days: 7

# ================================
# VOICE ASSISTANT
# ================================
voice_assistant:
  deploy: false
  wake_word: "frey"
  porcupine_access_key: "YOUR_PICOVOICE_ACCESS_KEY"
  ollama_model: "llama3:latest"
  piper_voice: "en_US-lessac-medium"
  piper_voices:
    - "en_US-lessac-medium"
    - "en_AU-southern-female"
    - "de_DE-thorsten-medium"


monitoring:
  group:
    name: monitoring
    gid: 12341
  user:
    name: monitoring_manager
    uid: 12341
    groups: "{{ monitoring.group.name }}"
  dir: "{{ storage.base_dir }}/monitoring"



# ================================
# DOCKER CONFIGURATION
# ================================
docker:
  group:
    name: docker
    gid: 362537  
  user:
    name: docker
    uid: 362537
    groups: "{{ docker.group.name }}"
  dir: "{{ storage.base_dir }}/dockge"
  stacks: "{{docker.dir }}/stacks"
  logs: "{{monitoring.dir }}/logs"


# ==============================================================================
# INFRASTRUCTURE - REFACTORED FOR DYNAMIC COMPOSE GENERATION
# ==============================================================================
infrastructure:
  group:
    name: infrastructure
    gid: 46372
  user:
    name: infrastructure_manager
    uid: 46372
    groups: "{{ infrastructure.group.name }}"
  dir: "{{ storage.base_dir }}/infrastructure"

# ==============================================================================
# MEDIA STACK - REFACTORED FOR DYNAMIC COMPOSE GENERATION
# ==============================================================================
media:
  group:
    name: media
    gid: 63342
  user:
    name: media_manager
    uid: 63342
    groups: "{{ media.group.name }}"
  dir: "{{ storage.base_dir }}/media"
  downloads: "{{ storage.base_dir }}/downloads"

  network:
    name: "media_network"
    subnet: "172.20.0.0/24"
    gateway: "172.20.0.1"

  vpn:
    enabled: false
    port: 8888

  services:
    jellyseerr:
      enabled: true
      image: "fallenbagel/jellyseerr:latest"
      container_name: "jellyseerr"
      port: 5055
      internal_ip: "172.20.0.40"
      volumes:
        - "{{ storage.appdata_dir }}/jellyseerr:/app/config"

    audiobookshelf:
      enabled: true
      image: "ghcr.io/advplyr/audiobookshelf:latest"
      container_name: "audiobookshelf"
      port: 13378
      ports: 
        - 13378:80
      internal_ip: "172.20.0.50"
      volumes:
        - "{{ storage.appdata_dir }}/audiobookshelf:/config"
        - "{{ media.dir }}/audiobooks:/audiobooks"
        - "{{ media.dir }}/podcasts:/podcasts"

    jellyfin:
      enabled: true
      image: "lscr.io/linuxserver/jellyfin:latest"
      container_name: "jellyfin"
      port: 8096
      internal_ip: "172.20.0.10"
      volumes:
        - "{{ storage.appdata_dir }}/jellyfin:/config"
        - "{{ media.dir }}/tv:/data/tvshows"
        - "{{ media.dir }}/movies:/data/movies"
    
    qbittorrent:
      enabled: true
      image: "lscr.io/linuxserver/qbittorrent:latest"
      container_name: "qbittorrent"
      port: 8080
      ports: 
       - "{{ media.vpn.port }}:{{ media.vpn.port }}"
       - 8080:8080 # Web UI
       - 6881:6881 # Torrent Port
      internal_ip: "172.20.0.30"
      volumes:
        - "{{ storage.appdata_dir }}/qbittorrent:/config"
        - "{{ media.downloads }}:/downloads"
      environment:
        - "WEBUI_PORT=8080"
        - "TORRENT_PORT=6881"
        - TORRENTING_PORT={{ media.vpn.port }} # airvpn forwarded port, pulled from .env


    nzbget:
      enabled: true
      image: "lscr.io/linuxserver/nzbget:latest"
      container_name: "nzbget"
      port: 6789
      internal_ip: "172.20.0.31"
      volumes:
        - "{{ storage.appdata_dir }}/nzbget:/config"
        - "{{ media.downloads }}:/downloads"
        - /data:/data
        - /etc/localtime:/etc/localtime:ro
        - ./nzbget:/config                        # TODO

    prowlarr:
      enabled: true
      image: "lscr.io/linuxserver/prowlarr:latest"
      container_name: "prowlarr"
      port: 9696
      internal_ip: "172.20.0.22"
      volumes:
        - "{{ storage.appdata_dir }}/prowlarr:/config"

    flaresolverr:
      enabled: true
      image: "ghcr.io/flaresolverr/flaresolverr:latest"
      container_name: "flaresolverr"
      port: 8191
      internal_ip: "172.20.0.19"
      volumes:
        - "{{ storage.appdata_dir }}/prowlarr:/config"
      environment:
        - LOG_LEVEL=${LOG_LEVEL:-info}
        - LOG_HTML=${LOG_HTML:-false}
        - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}

    sonarr:
      enabled: true
      image: "lscr.io/linuxserver/sonarr:latest"
      container_name: "sonarr"
      port: 8989
      internal_ip: "172.20.0.20"
      volumes:
        - "{{ storage.appdata_dir }}/sonarr:/config"
        - "{{ media.downloads }}:/downloads"
        - "{{ media.dir }}/tv:/tv"

    radarr:
      enabled: true
      image: "lscr.io/linuxserver/radarr:latest"
      container_name: "radarr"
      port: 7878
      internal_ip: "172.20.0.21"
      volumes:
        - "{{ storage.appdata_dir }}/radarr:/config"
        - "{{ media.downloads }}:/downloads"
        - "{{ media.dir }}/movies:/movies"

    bazarr:
      enabled: true
      image: "lscr.io/linuxserver/bazarr:latest"
      container_name: "bazarr"
      port: 6767
      internal_ip: "172.20.0.23"
      volumes:
        - "{{ storage.appdata_dir }}/bazarr:/config"
        - "{{ media.dir }}/movies:/movies"
        - "{{ media.dir }}/tv:/tv"

    lidarr:
      enabled: true
      image: "lscr.io/linuxserver/lidarr:latest"
      container_name: "lidarr"
      port: 8686
      internal_ip: "172.20.0.24"
      volumes:
        - "{{ storage.appdata_dir }}/lidarr:/config"
        - "{{ media.downloads }}:/downloads"
        - "{{ media.dir }}/music:/music"
        
    audiobookrequest:
      enabled: true
      image: "markbeep/audiobookrequest:latest"
      container_name: "audiobookrequest"
      port: 5432
      internal_ip: "172.20.0.32"
      volumes:
        - ./config:/config
      environment:
        - "ABR_APP__PORT=5432"
        - "ABR_APP__OPENAPI_ENABLED=true"

    jellystat:
      enabled: false
      image: "cyfershep/jellystat:latest"
      container_name: "jellystat"
      port: 8086
      internal_ip: "172.20.0.60"
      volumes:
        - "{{ storage.appdata_dir }}/jellystat/config.json:/app/config/config.json"

    jellystat_db:
      enabled: false # Jellystat dependency
      image: "postgres:15"
      container_name: "jellystat-db"
      internal_ip: "172.20.0.61"
      volumes:
        - "{{ storage.appdata_dir }}/jellystat/db:/var/lib/postgresql/data"
      environment:
        - "POSTGRES_DB=jellystat"
        - "POSTGRES_USER=jellystat"
        - "POSTGRES_PASSWORD=jellystat"

    ytdl-sub:
      enabled: false
      image: "ghcr.io/jmbannon/ytdl-sub:latest"
      container_name: "ytdl-sub"
      internal_ip: "172.20.0.70"
      volumes:
        - "{{ storage.appdata_dir }}/ytdl-sub:/config"
        - "{{ media.downloads }}:/downloads"

