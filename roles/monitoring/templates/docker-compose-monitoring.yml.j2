services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: "0"
    ports:
      - "{{ ports.monitoring.prometheus }}:9090"
    volumes:
      - "{{ storage.appdata_dir }}/prometheus:/etc/prometheus"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ storage.appdata_dir }}/prometheus/data:/prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "{{ ports.monitoring.node_exporter }}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "{{ ports.monitoring.cadvisor }}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "{{ ports.monitoring.grafana }}:3000"
    volumes:
      - "{{ storage.appdata_dir }}/grafana:/var/lib/grafana"
      - "{{ storage.appdata_dir }}/grafana/provisioning:/etc/grafana/provisioning"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ monitoring.grafana.default_password | default('admin123') }}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ network.domain_name | default('local') }}`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - default
      - proxy

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "{{ ports.monitoring.loki }}:3100"
    volumes:
      - "{{ storage.appdata_dir }}/loki:/loki"
    # Loki will read /etc/loki/local-config.yaml if present; we also mount storage at /loki for indexes

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - "{{ monitoring.dir }}/logs:/var/log:ro"
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - "{{ storage.appdata_dir }}/promtail:/etc/promtail"
    command: -config.file=/etc/promtail/config.yml

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "{{ ports.monitoring.uptime_kuma }}:3001"
    volumes:
      - "{{ storage.appdata_dir }}/uptime-kuma:/app/data"
      - /var/run/docker.sock:/var/run/docker.sock:ro

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL={{ automation.watchtower_interval }}
      - WATCHTOWER_INCLUDE_RESTARTING=true
    command: --schedule "0 0 2 * * *"  # 2 AM daily

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    container_name: speedtest-tracker
    environment:
      - PUID={{ media.media_uid | default(user.uid | default(1000)) }}
      - PGID={{ media.media_gid | default(user.gid | default(1000)) }}
      - TZ={{ network.timezone | default('UTC') }}
      - OOKLA_EULA_GDPR=true
    volumes:
      - '{{ storage.appdata_dir }}/speedtest:/config'
    ports:
      - '{{ ports.network_tools.speedtest }}:80'
    restart: unless-stopped
    networks:
      - default

networks:
  default:
    name: monitoring_network
  proxy:
    external: true