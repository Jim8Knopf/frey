---
- block:
    - name: Attempt to load OS-specific vars (distribution/family/main)
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files:
            - "{{ ansible_distribution }}.yml"
            - "{{ ansible_os_family }}.yml"
            - main.yml
          paths:
            - vars

  rescue:
    - name: Warn that no OS-specific vars file was found
      ansible.builtin.debug:
        msg: "No OS-specific vars found ({{ ansible_distribution }} / {{ ansible_os_family }}); continuing without them."

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Docker packages.
  package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install Docker packages (with downgrade option).
  package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
    allow_downgrade: true
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install docker-compose plugin.
  package:
    name: "{{ docker_compose_package }}"
    state: "{{ docker_compose_package_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install docker-compose-plugin (with downgrade option).
  package:
    name: "{{ docker_compose_package }}"
    state: "{{ docker_compose_package_state }}"
    allow_downgrade: true
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- include_tasks: docker-compose.yml

- name: Get docker group info using getent.
  getent:
    database: group
    key: docker
    split: ':'

- name: Check if there are any users to add to the docker group.
  set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]

- include_tasks: docker-users.yml
  when: at_least_one_user_to_modify is defined
