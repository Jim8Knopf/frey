---
- name: Deploy Enhanced Raspberry Pi 5 Off-Grid Media & AI Hub
  hosts: all
  become: yes

  vars_files:
    - ../group_vars/all/main.yml
    - ../group_vars/all/secrets.yml

  pre_tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags: always

    - name: Display deployment info
      ansible.builtin.debug:
        msg: |
          üöÄ Starting Pi 5 Hub deployment
          Target: {{ ansible_host }}
          User: {{ ansible_user_id }}
          Services: {% if deploy_media_stack %}Media, {% endif %}{% if deploy_ai_stack %}AI, {% endif %}{% if deploy_monitoring %}Monitoring, {% endif %}{% if deploy_photo_management %}Photos{% endif %}

  roles:    
    - role: security
      tags: [security]
      when: enable_ufw or enable_fail2ban

    - role: ssd_optimization
      tags: [ssd, optimization]
      when: enable_ssd_optimization
    
    - role: geerlingguy.docker
      tags: [docker, base]

    - role: directories
      tags: [directories, base]
    
    - role: infrastructure
      tags: [infrastructure, management]
      when: deploy_infrastructure
    
    

    - role: wifi_access_point
      tags: [wifi, networking]
      when: deploy_wifi_access_point
    
    - role: dockge
      tags: [dockge, management]
    
    - role: monitoring
      tags: [monitoring]
      when: deploy_monitoring

    - role: media_stack
      tags: [media]
      when: deploy_media_stack

    - role: ai_stack
      tags: [ai]
      when: deploy_ai_stack

    - role: photo_management
      tags: [photos]
      when: deploy_photo_management

    - role: file_management
      tags: [files]
      when: deploy_file_management
    
    - role: cookbook
      tags: [cookbook, services]
      when: deploy_cookbook
    
    - role: piper
      tags: [piper, voice, ai]
      when: deploy_piper

    - role: voice_assistant
      tags: [voice, ai]
      when: deploy_voice_assistant

    - role: backup
      tags: [backup]
      when: deploy_backup
    
    - role: power_management
      tags: [power]
      when: enable_power_monitoring

  post_tasks:
    - name: Copy maintenance scripts to target
      copy:
        src: ../scripts/
        dest: "{{ base_dir }}/scripts/"
        mode: '0755'
      tags: always

    - name: Display service URLs
      ansible.builtin.debug:
        msg: |
          
          üéØ DEPLOYMENT COMPLETED! Your services are available at:
          {% for service in dns_rewrites %}
          - http://{{ service.name }}.{{ domain_name }}
          {% endfor %}
          
          üîë DEFAULT CREDENTIALS (CHANGE IMMEDIATELY!):
          qBittorrent:     admin / {{ default_qbittorrent_password }}
          Grafana:         admin / {{ default_grafana_password }}
          Code Server:     Password: {{ default_code_server_password }}
          
          ‚ö° NEXT STEPS:
          1. Change all default passwords!
          2. Configure your media indexers in Prowlarr
          3. Set up monitoring dashboards in Grafana
          4. Access Dockge for easy container management
          
          üìñ Happy self-hosting! üè†‚ú®
      tags: always

    - name: Create maintenance reminder
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          echo "üîß Maintenance Scripts Available:"
          echo "Health Check:    sudo {{ base_dir }}/scripts/health_check.sh"
          echo "Maintenance:     sudo {{ base_dir }}/scripts/maintenance.sh"  
          echo "Optimization:    sudo {{ base_dir }}/scripts/optimize.sh"
        dest: "{{ base_dir }}/README_MAINTENANCE.sh"
        mode: '0755'
      tags: always